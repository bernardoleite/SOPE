Com a finalidade de evitar no código desenvolvido situações de competição no acesso a elementos partilhados e para garantir,
de forma eficiente, a exclusão mútua de secções críticas de vários threads foram utilizados Mutexes.


Assim, para proteger a secção crítica por parte de um thread utilizámos as seguintes operações de aquisição e libertação (lock e unlock):

     
      pthread_mutex_lock(&mutex);
      ...  /* secção crítica */
      pthread_mutex_unlock(&mutex);



A inicialização foi efetuada usando uma constante pré-definida em pthread.h denominada PTHREAD_MUTEX_INITIALIZER:

     pthread_mutex_t mut = PTHREAD_MUTEX_INITIALIZER;